<?xml version="1.0"?>
<doc>
    <assembly>
        <name>senai.inlock.webApi</name>
    </assembly>
    <members>
        <member name="P:senai.inlock.webApi.Controller.EstudioController._estudioRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controller.EstudioController.#ctor">
            <summary>
            Instância do objeto _estudioRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controller.EstudioController.Get">
            <summary>
            Endpoint que acessa o método de listar os estudios
            </summary>
            <returns>Lista de estudios e um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controller.EstudioController.Post(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar estudio
            </summary>
            <param name="novoEstudio">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controller.EstudioController.PutIdCorpo(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualizar estudio existente passando o seu id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto estudio com as novas informações</param>
            <returns>Um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controller.EstudioController.PutIdUrl(System.Int32,senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualizar Estudio pela URL
            </summary>
            <param name="id"></param>
            <param name="UrlEstudio"></param>
            <returns></returns>
        </member>
        <member name="T:senai.inlock.webApi.Controller.JogoController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:senai.inlock.webApi.Controller.JogoController._jogoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controller.JogoController.#ctor">
            <summary>
            Instância do objeto _filmeRepository para que haja referência aos mêtodos no repositório
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Controller.JogoController.Get">
            <summary>
            Endpoint que acessa o método de listar os jogo
            </summary>
            <returns>Lista de jogos e um status code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controller.JogoController.Post(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar jogo
            </summary>
            <param name="novoJogo">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:senai.inlock.webApi.Controller.JogoController.PutIdCorpo(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualizar jogo existente passando o seu id pelo corpo da requisição
            </summary>
            <param name="jogo">Objeto jogo com as novas informações</param>
            <returns>Um status code</returns>
        </member>
        <member name="T:senai.inlock.webApi.Controller.UsuarioController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="T:senai.inlock.webApi.Domains.EstudioDomain">
            <summary>
            Classe que representa a Entidade(Tabela) Estudio;
            </summary>
        </member>
        <member name="T:senai.inlock.webApi.Domains.JogoDomain">
            <summary>
            Classe que representa a Entidade(Tabela) Jogo;
            </summary>
        </member>
        <member name="T:senai.inlock.webApi.Domains.TiposUsuarioDomain">
            <summary>
            Classe que representa a Entidade(Tabela) TiposUsuario;
            </summary>
        </member>
        <member name="T:senai.inlock.webApi.Domains.UsuarioDomain">
            <summary>
            Classe que representa Entidade(Tabela) Usuario;
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.Cadastrar(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            CADASTRAR TODOS OS ESTUDIOS
            </summary>
            <param name="novoEstudio">objeto que irá ser cadastarado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.ListarTodos">
            <summary>
            LISTAR TODOS OS ESTUDIOS
            </summary>
            <returns>uma lista de ESTUDIOS</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            BUSCAR UM ESTUDIO PELO ID
            </summary>
            <param name="id">id do objeto buscado</param>
            <returns>objeto que foi buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            ATUALIZAR O ESTUDIO PELO CORPO
            </summary>
            <param name="estudio">objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            ATUALIZAR O ESTUDIO PELA URL
            </summary>
            <param name="id">id do objeto a ser atualizado</param>
            <param name="estudio">objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IEstudioRepository.Deletar(System.Int32)">
            <summary>
            DELETAR O ESTUDIO PELO ID
            </summary>
            <param name="id">id do objeto que irá ser deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.Cadastrar(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            CADASTRAR TODOS OS JOGOS
            </summary>
            <param name="novoJogo">objeto que irá ser cadastarado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.ListarTodos">
            <summary>
            LISTAR TODOS OS JOGOS
            </summary>
            <returns>uma lista de JOGOS</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.BuscarPorId(System.Int32)">
            <summary>
            BUSCAR UM JOGO PELO ID
            </summary>
            <param name="id">id do objeto buscado</param>
            <returns>objeto que foi buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            ATUALIZAR O JOGO PELO CORPO
            </summary>
            <param name="jogo">objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            ATUALIZAR O JOGO PELA URL
            </summary>
            <param name="id">id do objeto a ser atualizado</param>
            <param name="jogo">objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IJogoRepository.Deletar(System.Int32)">
            <summary>
            DELETAR O JOGO PELO ID
            </summary>
            <param name="id">id do objeto que irá ser deletado</param>
        </member>
        <member name="M:senai.inlock.webApi.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            MÉTODO QUE BUSCA UM USUÁRIO POR EMAIL E SENHA
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
        <member name="F:senai.inlock.webApi.Repositories.EstudioRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados, que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catolog : Nome do banco de dados
            Autenticação
                -windowns : Integrated Security = True
                -SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.EstudioRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualizar o estudio passando o seu id pelo corpo da requisição
            </summary>
            <param name="estudio">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.EstudioRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Atualizar o estudio pela URL
            </summary>
            <param name="id">Id do estudio a ser atualizado</param>
            <param name="estudio">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.EstudioRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar Estudio pelo ID
            </summary>
            <param name="id">Id do estudio a ser buscado</param>
            <returns></returns>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.EstudioRepository.Cadastrar(senai.inlock.webApi.Domains.EstudioDomain)">
            <summary>
            Cadastrar Estudio
            </summary>
            <param name="novoEstudio">Objeto com as informações que serão cadastrados</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.EstudioRepository.Deletar(System.Int32)">
            <summary>
            Deletar Estudio
            </summary>
            <param name="id">Id do objeto que irá ser deletado</param>
        </member>
        <member name="F:senai.inlock.webApi.Repositories.JogoRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados, que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catolog : Nome do banco de dados
            Autenticação
                -windowns : Integrated Security = True
                -SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.AtualizarIdCorpo(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualizar o jogo passando o seu id pelo corpo da requisição
            </summary>
            <param name="jogo">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.AtualizarIdUrl(System.Int32,senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Atualizar jogo pela URL
            </summary>
            <param name="id">Id do jogo que irá ser atualizado</param>
            <param name="jogo">Objeto com as novas informações</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um jogo através do seu id
            </summary>
            <param name="id">Id do jogo a ser buscado</param>
            <returns>Objeto Buscado</returns>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.Cadastrar(senai.inlock.webApi.Domains.JogoDomain)">
            <summary>
            Cadastrar um novo jogo
            </summary>
            <param name="novoJogo">Objeto com as informações que serão cadastrados</param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.Deletar(System.Int32)">
            <summary>
            Deletar o objeto selecionado do tipo jogo
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:senai.inlock.webApi.Repositories.JogoRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo jogos
            </summary>
            <returns>Lista de objetos do tipo filme</returns>
        </member>
    </members>
</doc>
